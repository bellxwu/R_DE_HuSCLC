) +
theme_minimal()
# 3.0 Density plots of genes
head(counts_norm)
?geom_density
# Create density plot
ggplot(norm_long, aes(x = log10(Counts + 10), color = Sample, fill = Sample)) +
geom_density(alpha = 0.3) +
labs(
title = "Density of normalized sgRNA counts",
x = "log10(normalized counts + 1)",
y = "Density"
) +
theme_minimal()
# Create density plot
ggplot(norm_long, aes(x = log2(Counts + 10), color = Sample, fill = Sample)) +
geom_density(alpha = 0.3) +
labs(
title = "Density of normalized sgRNA counts",
x = "log10(normalized counts + 1)",
y = "Density"
) +
theme_minimal()
# Create density plot
ggplot(norm_long, aes(x = log10(Counts + 10), color = Sample, fill = Sample)) +
geom_density(alpha = 0.3) +
labs(
title = "Density of normalized sgRNA counts",
x = "log10(normalized counts + 1)",
y = "Density"
) +
theme_minimal()
# Create density plot
ggplot(norm_long, aes(x = log10(Counts + 10), color = Sample, fill = Sample)) +
geom_density(alpha = 0.3) +
labs(
title = "Density of normalized sgRNA counts",
x = "log10(normalized counts + 1)",
y = "Density"
) +
theme_minimal()
# create a long df
norm_long <- counts_norm |>
dplyr::select(-Gene) |>
pivot_longer(-c("sgRNA", ""),
names_to = "Sample",
values_to = "Counts")
# Create density plot
ggplot(norm_long, aes(x = log10(Counts + 10), color = Sample, fill = Sample)) +
geom_density(alpha = 0.3) +
labs(
title = "Density of normalized sgRNA counts",
x = "log10(normalized counts + 1)",
y = "Density"
) +
theme_minimal()
# create a long df
norm_long <- counts_norm |>
dplyr::select(-Gene) |>
pivot_longer(-c("sgRNA", ""),
names_to = "Sample",
values_to = "Counts")
# 3.0 Density plots of genes
head(counts_norm)
# create a long df
norm_long <- counts_norm |>
dplyr::select(-Gene) |>
pivot_longer(-c("sgRNA"),
names_to = "Sample",
values_to = "Counts")
head(norm_long)
# Create density plot
ggplot(norm_long, aes(x = log10(Counts + 10), color = Sample, fill = Sample)) +
geom_density(alpha = 0.3) +
labs(
title = "Density of normalized sgRNA counts",
x = "log10(normalized counts + 1)",
y = "Density"
) +
theme_minimal()
# Create density plot
ggplot(norm_long, aes(x = log10(Counts + 1), color = Sample, fill = Sample)) +
geom_density(alpha = 0.3) +
labs(
title = "Density of normalized sgRNA counts",
x = "log10(normalized counts + 1)",
y = "Density"
) +
theme_minimal()
# Create density plot
ggplot(norm_long, aes(x = log2(Counts + 1), color = Sample, fill = Sample)) +
geom_density(alpha = 0.3) +
labs(
title = "Density of normalized sgRNA counts",
x = "log10(normalized counts + 1)",
y = "Density"
) +
theme_minimal()
# Create density plot
ggplot(norm_long, aes(x = log10(Counts + 1), color = Sample, fill = Sample)) +
geom_density(alpha = 0.3) +
labs(
title = "Density of normalized sgRNA counts",
x = "log10(normalized counts + 1)",
y = "Density"
) +
theme_minimal()
# Create density plot
ggplot(norm_long, aes(x = log10(Counts + 1), color = Sample, fill = Sample)) +
geom_density(alpha = 0.3) +
labs(
title = "Density of normalized sgRNA counts",
x = "log10(normalized counts + 1)",
y = "Density"
) +
theme_bw()
ggsave(
file = "Sample_densities.png",
plot = last_plot(),
path = "~/Desktop/Lok Lab/*HuMice Project - CRISPR screen/MusCKA-RUN3/sgRNA_QC",
width = 5,
height = 5,
dpi = 300
)
# 3.0 Density plots of genes
head(counts_norm)
head(counts)
head(counts_summary)
head(counts)
# remove the aCD8_T1 data from future analysis
norm_long <- counts_norm |>
dplyr::select(-c("Gene", "B6_aCD8_T1")) |>
pivot_longer(-c("sgRNA"),
names_to = "Sample",
values_to = "Counts")
# Create density plot
ggplot(norm_long, aes(x = log10(Counts + 1), color = Sample, fill = Sample)) +
geom_density(alpha = 0.3) +
labs(
title = "Density of normalized sgRNA counts",
x = "log10(normalized counts + 1)",
y = "Density"
) +
theme_bw()
head(counts_summary)
head(counts)
# 1.0 prepare dfs and workspace -----
setwd("~/Desktop/Lok Lab/*HuMice Project - CRISPR screen/MusCKA-RUN3/MusCK3_counts_ver2/")
# load data files:
counts_summary <- read.table("MusCK3_r3_ver2.countsummary.txt", header = TRUE)
counts <- read.table("MusCK3_r3_ver2.count.txt", header = TRUE)
counts_norm <- read.table("MusCK3_r3_ver2.count_normalized.txt", header = TRUE)
head(counts_summary)
head(counts)
head(counts_norm)
# 2.0 create barplot for the average of sgRNAs mapped ----
counts_avg <- counts_summary |>
group_by(Label) |>
summarise(avg_zerocounts = mean(Zerocounts)) |>
mutate(sgrnas_detected = 24622 - avg_zerocounts)
ggplot(counts_avg, mapping = aes(x = reorder(Label, -sgrnas_detected), y = sgrnas_detected, fill = Label)) +
geom_col() +
labs(title = "Average sgRNAs detected per sample",
x = "Sample", y = "sgRNAs detected") +
scale_fill_manual(values = wes_palette("BottleRocket1")[1:6]) +
geom_text(aes(label = scales::comma(sgrnas_detected)),   # put the n values
vjust = -0.3, size = 3.5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) # rotate x axis
ggsave(
file = "Avg_sgRNAs_ver2.png",
plot = last_plot(),
path = "~/Desktop/Lok Lab/*HuMice Project - CRISPR screen/MusCKA-RUN3/sgRNA_QC",
width = 5,
height = 5,
dpi = 300
)
# 2.1 create bar plot for percent mapped and average gini indices -----
# 2.1.1 percent reads mapped:-----
map_avg <- counts_summary |>
group_by(Label) |>
summarise(percent_mapped = mean(Percentage), average_Gini = mean(GiniIndex))
ggplot(map_avg, mapping = aes(x = reorder(Label, -percent_mapped), y = percent_mapped, fill = Label)) +
geom_col() +
labs(title = "Percent reads mapped sgRNAs per group",
x = "Sample", y = "sgRNAs Mapped/sgRNAs reads") +
scale_fill_manual(values = wes_palette("BottleRocket1")[1:6]) +
geom_text(aes(label = scales::comma(percent_mapped)),   # put the n values
vjust = -0.3, size = 3.5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) # rotate x axis
# save plot
ggsave(
file = "Percent_reads_mapped_ver2.png",
plot = last_plot(),
path = "~/Desktop/Lok Lab/*HuMice Project - CRISPR screen/MusCKA-RUN3/sgRNA_QC",
width = 5,
height = 5,
dpi = 300
)
# 2.1.2 Gini indicies: -----
ggplot(map_avg, mapping = aes(x = reorder(Label, -average_Gini), y = average_Gini, fill = Label)) +
geom_col() +
labs(title = "Gini indices per sample",
x = "Sample", y = "Gini index") +
scale_fill_manual(values = wes_palette("BottleRocket1")[1:6]) +
geom_text(aes(label = scales::comma(average_Gini)),   # put the n values
vjust = -0.3, size = 3.5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) # rotate x axis
# 2.1.2 Gini indicies: -----
ggplot(map_avg, mapping = aes(x = reorder(Label, -average_Gini), y = average_Gini, fill = Label)) +
geom_col() +
labs(title = "Gini indices per sample",
x = "Sample", y = "Gini index") +
scale_fill_manual(values = wes_palette("BottleRocket1")[1:6]) +
geom_text(aes(label = scales::comma(average_Gini)),   # put the n values
vjust = -0.3, size = 3.5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) # rotate x axis
# save plot
ggsave(
file = "Gini_indices_ver2.png",
plot = last_plot(),
path = "~/Desktop/Lok Lab/*HuMice Project - CRISPR screen/MusCKA-RUN3/sgRNA_QC",
width = 5,
height = 5,
dpi = 300
)
# 3.0 Density plots of genes ----
head(counts_norm)
# create a long df
norm_long <- counts_norm |>
dplyr::select(-Gene) |>
pivot_longer(-c("sgRNA"),
names_to = "Sample",
values_to = "Counts")
head(norm_long)
# Create density plot
ggplot(norm_long, aes(x = log10(Counts + 1), color = Sample, fill = Sample)) +
geom_density(alpha = 0.3) +
labs(
title = "Density of normalized sgRNA counts",
x = "log10(normalized counts + 1)",
y = "Density"
) +
theme_bw()
# Create density plot
ggplot(norm_long, aes(x = log10(Counts + 1), color = Sample, fill = Sample)) +
geom_density(alpha = 0.3) +
labs(
title = "Density of normalized sgRNA counts",
x = "log10(normalized counts + 1)",
y = "Density"
) +
theme_bw()
# save plot
ggsave(
file = "Sample_densities_ver2.png",
plot = last_plot(),
path = "~/Desktop/Lok Lab/*HuMice Project - CRISPR screen/MusCKA-RUN3/sgRNA_QC",
width = 5,
height = 5,
dpi = 300
)
# Create density plot
ggplot(norm_long, aes(x = log10(Counts + 1), color = Sample, fill = Sample)) +
geom_density(alpha = 0.3) +
labs(
title = "Density of normalized sgRNA counts",
x = "log10(normalized counts + 1)",
y = "Density"
) +
theme_bw()
setwd("~/Desktop/Lok Lab/*HuMice Project - CRISPR screen/MusCKA-RUN3/")
setwd("~/Desktop/Lok Lab/*HuMice Project - CRISPR screen/")
setwd("~/Desktop/Lok Lab/*HuMice Project - CRISPR screen/MusCKA-RUN3/")
B6_IgGvs_NRG_IgG <- read.table("B6_IgG_vs_NSG_IgG_gene_summary.txt")
B6_IgGvs_NRG_IgG <- read.table("B6_IgG_vs_NSG_IgG_gene_summary.txt", header = TRUE)
head(B6_IgGvs_NRG_IgG)
padj_hits <- B6_IgGvs_NRG_IgG |>
filter(neg.fdr < 0.05 | pos.fdr < 0.05)
head(padj_hits)
dim(padj_hits)
View(padj_hits)
# fdr of < 0.1
padj_hits_0.1 <- B6_IgGvs_NRG_IgG |>
filter(neg.fdr < 0.1 | pos.fdr < 0.1)
dim(padj_hits_0.1)
# fdr of < 0.2
padj_hits_0.2 <- B6_IgGvs_NRG_IgG |>
filter(neg.fdr < 0.2 | pos.fdr < 0.2)
dim(padj_hits_0.1)
dim(padj_hits_0.2)
# fdr of < 0.2
padj_hits_0.2 <- B6_IgGvs_NRG_IgG |>
filter(neg.fdr < 0.2 | pos.fdr < 0.2)
View(padj_hits_0.2)
# load df for B6-aCD8 vs B6-IgG
B6_aCD8_B6_IgG <- read.table("B6_aCD8_vs_B6_IgG_gene_summary.txt")
# fdr of < 0.05
padj_hits_0.05 <- B6_aCD8_B6_IgG |>
filter(neg.fdr < 0.05 | pos.fdr < 0.05)
head(padj_hits_0.05)
# load df for B6-aCD8 vs B6-IgG
B6_aCD8_B6_IgG <- read.table("B6_aCD8_vs_B6_IgG_gene_summary.txt", header = TRUE)
# fdr of < 0.05
padj_hits_0.05 <- B6_aCD8_B6_IgG |>
filter(neg.fdr < 0.05 | pos.fdr < 0.05)
head(padj_hits_0.05)
dim(padj_hits_0.05)
# fdr of < 0.1
padj_hits_0.1 <- B6_aCD8_B6_IgG |>
filter(neg.fdr < 0.1 | pos.fdr < 0.1)
dim(padj_hits_0.1)
# fdr of < 0.2
padj_hits_0.2 <- B6_aCD8_B6_IgG |>
filter(neg.fdr < 0.2 | pos.fdr < 0.2)
dim(padj_hits_0.2)
padj_hits_0.2
View(B6_aCD8_B6_IgG)
View(B6_IgGvs_NRG_IgG)
View(padj_hits_0.2)
# fdr of < 0.1
padj_hits_0.1 <- B6_IgGvs_NRG_IgG |>
filter(neg.fdr < 0.1 | pos.fdr < 0.1)
dim(padj_hits_0.1)
# fdr of < 0.2
padj_hits_0.2 <- B6_IgGvs_NRG_IgG |>
filter(neg.fdr < 0.2 | pos.fdr < 0.2)
dim(padj_hits_0.2)
View(padj_hits_0.2)
write.csv("B6_IgGvsNRG_IgG_0.2.csv" x = padj_hits_0.2)
write.csv("B6_IgGvsNRG_IgG_0.2.csv", x = padj_hits_0.2)
setwd("~/R_programming/R_DE_HuSCLC/")
NE_low_sig <- read.csv("NE_low_HotvsCold.csv")
NE_high_sig <- read.csv("NE_high_HotvsCold.csv")
View(NE_high_sig)
NE_total <- rbind(NE_high_sig, NE_low_sig)
View(NE_total)
setwd("~/Desktop/Lok Lab/*HuMice Project - CRISPR screen/MusCKA-RUN3/")
View(NE_total)
B6_NRG <- read.table("B6_IgG_vs_NSG_IgG_gene_summary.txt", header = TRUE)
# select genes
head(NE_total)
imm_induce <- NE_total |>
filter(log2FoldChange > 1)
dim(imm_induce)
dim(imm_induce)
View(imm_induce)
setwd("~/R_programming/R_DE_HuSCLC/")
# 1.0 Load files and prep dfs -------
total_counts <- read.csv("CDX_CCLE_raw_counts.csv")
head(total_counts)
# subset out only NE-low, NE-high
NE_low <- total_counts |>
dplyr::select(matches("CDX12|H1048|SBC5|H1048|H526"))
head(NE_low)
rownames(NE_low) = total_counts$X
NE_high <- total_counts |>
dplyr::select(matches("CDX15|CDX9|H1694|H446|H82|SHP77"))
head(NE_high)
rownames(NE_high) = total_counts$X
# 2.0 DEseq for NE-high:
# 2.1 create metadata for dfs -----
colnames(total_counts)
batches <- data.frame(
Sample = colnames(total_counts),
batch  = ifelse(grepl("LUNG$", colnames(total_counts)), "CCLE",
ifelse(grepl("^CDX",  colnames(total_counts)), "CDX", NA))
)
NE_high_md <- batches |>
filter(batches$Sample %in% colnames(NE_high)) |>
mutate(condition = ifelse(
str_detect(Sample, "CDX9|SHP77|H1694"), "Hot", "Cold"
))
# 2.2 Create DDS for DESeq2 -----
high_dds <- DESeqDataSetFromMatrix(countData = NE_high,
colData = NE_high_md,
design = ~ batch + condition)
high_dds <- DESeq(high_dds) # identify DESeq
# 4.0 Comparisons for same genes ----
NE_low_sig <- read.csv("NE_low_HotvsCold.csv")
NE_high_sig <- read.csv("NE_high_HotvsCold.csv")
head(NE_low_sig)
dim(NE_low_sig)
head(NE_high_sig)
dim(NE_high_sig)
# identify same genes
same_genes <- intersect(NE_low_sig$X, NE_high_sig$X)
length(same_genes)
length(same_genes)
same_genes
# load dfs
setwd("~/R_programming/R_DE_HuSCLC/")
NE_low_sig <- read.csv("NE_high_sg.csv")
NE_high_sig <- read.csv("NE_low_sg.csv")
NE_total <- rbind(NE_high_sig, NE_low_sig)
setwd("~/Desktop/Lok Lab/*HuMice Project - CRISPR screen/MusCKA-RUN3/")
B6_NRG <- read.table("B6_IgG_vs_NSG_IgG_gene_summary.txt", header = TRUE)
# select genes
head(NE_total)
imm_induce <- NE_total |>
filter(log2FoldChange > 1)
dim(imm_induce)
View(imm_induce)
NE_low_sig <- read.csv("NE_low_HotvsCold.csv")
NE_high_sig <- read.csv("NE_high_HotvsCold.csv")
# load dfs
setwd("~/R_programming/R_DE_HuSCLC/")
NE_low_sig <- read.csv("NE_low_HotvsCold.csv")
NE_high_sig <- read.csv("NE_high_HotvsCold.csv")
NE_total <- rbind(NE_high_sig, NE_low_sig)
view(NE_total)
# select genes
head(NE_total)
imm_induce <- NE_total |>
filter(log2FoldChange > 1)
dim(imm_induce)
head(B6_NRG)
imm_induce_Mus <- B6_NRG |>
filter(neg.fdr < 0.2)
imm_induce_Mus
imm_induce_DE <- NE_total |>
filter(log2FoldChange > 1)
intersect(imm_induce_Mus$id, imm_induce_DE$X)
View(NE_low_sig)
View(NE_low_sig)
View(NE_low)
View(NE_high_sig)
# see if there are any intersecting genes for NE_low and MusCKA only
intersect(imm_induce_Mus$id, NE_high_sig$X)
# see if there are any intersecting genes for NE_low and MusCKA only
intersect(imm_induce_Mus$id, NE_total$X)
imm_induce_Mus$id
NE_total$X
View(NE_total)
imm_induce_Mus$id
duplicate(NE_total$X)
duplicated(NE_total$X)
any(duplicated(NE_total$X))
imm_induce_Mus$id
setwd("~/Desktop/Lok Lab/*HuMice Project - CRISPR screen/MusCKA-RUN3/")
# load df for B6-IgG vs NRG-IgG
B6_IgGvs_NRG_IgG <- read.table("B6_IgG_vs_NSG_IgG_gene_summary.txt", header = TRUE)
head(B6_IgGvs_NRG_IgG)
# based of neg rank:
neg_rank_100 <- B6_IgGvs_NRG_IgG |>
filter(neg.rank <= 100)
neg_rank_100
getwd()
write.csv("B6_IgGvsNRG_IgG_neg100.csv", neg_rank_100)
setwd("~/Desktop/Lok Lab/*HuMice Project - CRISPR screen/MusCKA-RUN3/")
# see if there are any intersecting genes for NE_low and MusCKA only
intersect(neg_rank_100$id, NE_total$X)
setwd("~/Desktop/Lok Lab/*HuMice Project - CRISPR screen/MusCKA-RUN3/")
write.csv("B6_IgGvsNRG_IgG_0.2.csv", x = padj_hits_0.2)
write.csv("B6_IgGvsNRG_IgG_neg100.csv", neg_rank_100)
neg_rank_100
setwd("~/Desktop/Lok Lab/*HuMice Project - CRISPR screen/MusCKA-RUN3/")
write.csv("B6_IgGvsNRG_IgG_neg100.csv", neg_rank_100)
write.csv("B6_IgGvsNRG_IgG_neg100.csv", x = neg_rank_100)
# see if there are any intersecting genes for NE_low and MusCKA only
common_imm <- intersect(neg_rank_100$id, NE_total$X)
NE_total
# select genes
head(NE_total)
DE_genes <- NE_total |>
filter(X %in% common_imm)
DE_genes
DE_genes <- DE_genes[order(DE_genes$log2FoldChange), ]
DE_genes
DE_genes <- DE_genes[-order(DE_genes$log2FoldChange), ]
DE_genes
?order
DE_genes <- DE_genes[order(DE_genes$log2FoldChange, decreasing = TRUE), ]
DE_genes
DE_genes <- NE_total |>
filter(X %in% common_imm)
DE_genes <- DE_genes[order(DE_genes$log2FoldChange, decreasing = TRUE), ]
DE_genes
# intersecting for genes in all NE and MusCKA
setwd("~/R_programming/R_DE_HuSCLC/")
NE_low_sig <- read.csv("NE_high_sg.csv")
NE_high_sig <- read.csv("NE_low_sg.csv")
NE_low_sig
head(NE_low_sig)
head(NE_high_sig)
intersect(NE_high_sig$X, NE_low_sig$X)
intersect(NE_high_sig$X, neg_rank_100$id)
NE_high_sig <- read.csv("NE_high_HotvsCold.csv")
# intersecting genes for NE high and MusCKA
intersect(NE_high_sig$X, neg_rank_100$id)
NE_low_sig <- read.csv("NE_low_HotvsCold.csv")
NE_high_sig <- read.csv("NE_high_HotvsCold.csv")
intersect(NE_low_sig$X, neg_rank_100$id)
length(intersect(NE_low_sig$X, neg_rank_100$id))
# intersecting genes for NE high and MusCKA
length(intersect(NE_high_sig$X, neg_rank_100$id))
intersect(NE_high_sig$X, neg_rank_100$id)
imm_induce_Mus
imm_induce_Mus$id
intersect(NE_high_sig$X, neg_rank_100$id)
DE_genes
DE_genes$X
length(DE_genes)
dim(DE_genes)
dim(imm_induce)
intersect(NE_high_sig$X, neg_rank_100$id)
# see if there are any intersecting genes for either NE_low or NE_high and MusCKA only
common_imm <- intersect(neg_rank_100$id, NE_total$X)
common_imm
